<?php

/**
 * @file
 * Main entry point for the module.
 */

use Drupal\node\NodeInterface;

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Updates description.
 */
function anu_lms_form_node_course_delete_form_alter(&$form) {
  $form['description']['#markup'] = t('This will delete all modules and lessons in this course and the translations. Are you sure you want to delete?');
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Updates description.
 */
function anu_lms_form_node_module_delete_form_alter(&$form) {
  $form['description']['#markup'] = t('This will delete all lessons in this module and the translations. Are you sure you want to delete?');
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 *
 * Removes leftover content related to the node.
 */
function anu_lms_node_delete(NodeInterface $node) {
  // Collects leftover contents IDs.
  if ($node->getType() == 'course') {

    // Collect module paragraphs IDs.
    $modules = $node->get('field_course_module')->referencedEntities();

    if (!empty($modules)) {
      // Collect IDs of referenced lessons and quizes.
      $nids = [];
      foreach ($modules as $module) {
        $nids = array_merge($nids, array_column($module->get('field_module_lessons')->getValue(), 'target_id'));
        $nids = array_merge($nids, array_column($module->get('field_module_assessment')->getValue(), 'target_id'));
      }
    }
  }

  if (!empty($nids)) {
    // Deletes nodes by chunks.
    $storage = \Drupal::entityTypeManager()->getStorage('node');
    foreach (array_chunk($nids, 50) as $chunk) {
      $nodes = $storage->loadMultiple($chunk);
      $storage->delete($nodes);
    }
  }
}
