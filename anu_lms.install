<?php

/**
 * @file
 * Update hooks for the module.
 */

use Drupal\Core\Field\FieldItemList;
use Drupal\entity_reference_revisions\Plugin\Field\FieldType\EntityReferenceRevisionsItem;
use Drupal\node\Entity\Node;
use Drupal\node\NodeInterface;
use Drupal\paragraphs\Entity\Paragraph;
use Drupal\paragraphs\ParagraphInterface;
use Drupal\Core\Field\Plugin\Field\FieldType\EntityReferenceItem;

function anu_lms_schema() {
  $schema['anu_lms_progress'] = [
    'description' => 'Stores user progress across ANU LMS content.',
    'fields' => [
      'uid' => [
        'description' => 'The {users}.id this record affects.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ],
      'nid' => [
        'description' => 'The {node}.nid completed by the {users}.id.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => ['uid', 'nid'],
    'indexes' => [
      'uid' => ['uid'],
    ],
    // For documentation purposes only; foreign keys are not created in the
    // database.
    'foreign keys' => [
      'data_user' => [
        'table' => 'users',
        'columns' => [
          'uid' => 'uid',
        ],
      ],
    ],
  ];

  return $schema;
}

/**
 * Migrate modules content from nodes to paragraphs.
 */
function anu_lms_update_8001() {
  /** @var NodeInterface[] $courses */
  $courses = \Drupal::entityTypeManager()->getStorage('node')
    ->loadByProperties(['type' => 'course']);

  foreach ($courses as $course) {
    /** @var EntityReferenceItem[] $modules */
    $modules_references = $course->get('field_course_modules');
    if (!empty($modules_references)) {
      foreach ($modules_references as $modules_reference) {
        $lesson_nids = [];
        $quiz_nid = FALSE;

        /** @var NodeInterface $module */
        $module = Node::load($modules_reference->target_id);

        /** @var EntityReferenceItem[] $lessons_references */
        $lessons_references = $module->get('field_module_lessons');
        foreach ($lessons_references as $lessons_reference) {
          $lesson_nids[] = $lessons_reference->target_id;
        }

        /** @var EntityReferenceItem $quiz_references */
        $quiz_references = $module->get('field_module_assessment');
        foreach ($quiz_references as $quiz_reference) {
          $quiz_nid = $quiz_reference->target_id;
        }

        /** @var ParagraphInterface $paragraph */
        $paragraph = Paragraph::create(['type' => 'course_modules']);
        $paragraph->set('field_module_title', $module->label());
        foreach ($lesson_nids as $nid) {
          $paragraph->field_module_lessons[] = $nid;
        }
        if (!empty($quiz_nid)) {
          $paragraph->field_module_assessment = $quiz_nid;
        }
        $paragraph->save();

        $current = $course->get('field_course_module')->getValue();
        $current[] = [
          'target_id' => $paragraph->id(),
          'target_revision_id' => $paragraph->getRevisionId(),
        ];

        $course->set('field_course_module', $current);
      }

      $course->save();
    }
  }
}

/**
 * Migrate is_highlight boolean field on image bullet list paragraphs to
 * default color
 */
function anu_lms_update_8002() {
  /** @var NodeInterface[] $lessons */
  $lessons = Drupal::entityTypeManager()->getStorage('node')
    ->loadByProperties(['type' => 'module_lesson']);
  foreach ($lessons as $lesson) {
    /** @var EntityReferenceRevisionsItem[] $sections */
    $sections = $lesson->get('field_module_lesson_content')
      ->referencedEntities();
    foreach ($sections as $section) {
      /** @var Paragraph $contents */
      $contents = $section->get('field_lesson_section_content')
        ->referencedEntities();
      foreach ($contents as $content) {
        if ($content->getType() == 'lesson_img_list') {
          /** @var FieldItemList $highlight_field */
          $highlight_field = $content->get('field_lesson_img_list_highlight');
          if ($highlight_field->getString() == "1") {
            $content->set('field_lesson_highlight_color', 'yellow');
            $content->save();
          }
        }
      }
    }
  }
}

/**
 * Create a new table for storing user progress.
 */
function anu_lms_update_8220() {
  $schema = anu_lms_schema();
  \Drupal::database()->schema()->createTable('anu_lms_progress', $schema['anu_lms_progress']);
}
